我现在需要你创建一个登录界面，要求：
使用element puls ui
登录界面首先有一个标题“QuPing”
接着下面是登录框，登录有2中方式，一个是密码登录，一个是验证码登录可以通过选项切换。
最先的是验证码登录，第一个输入框提示输入手机号或者邮箱，
接着下面一个输入框是用来输入验证码并且输入框右边有一个发送验证码按钮，
接着下面就是登录按钮。密码登录和验证码登录类似，
只是输入验证码的输入框变成输入密码的输入框。要求界面简洁配色高级好看。

现在让我们来完成登录逻辑。先创建一个me.vue界面这个界面暂时不需要什么，
只是作为登入成功后的跳转页。
后端的api地址为localhost:8080，首先你可能需要解决跨域问题。
获取手机验证码的接口为/user/getCodeByPhone?phoneNumber=18070403876 请求方式为get
获取邮箱验证码的接口为/user/getCodeByEmail?email=123456@qq.com 请求方式为get
响应后端响应的格式为：{
	"code": "1",
	"msg": "ok",
	"data": "18070403876"
}
其中code=1表示成功code=-1表示失败
data是请求的邮箱或者手机号
接着就是验证码登录的接口/user/doLogin 请求方式为post
请求体示例：
{
    "code":"268224",
    "email":"",
    "phoneNumber":"18070403876"
}
如果是手机登录，那么phoneNumber不能为空，如果是邮箱登录，那么email不能为空。
code为用户输入的验证码
响应后端响应的格式为：
{
	"code": "1",
	"msg": "ok",
	"data": "35cef2f4469d44b8b7e58f2c2c83a42f"
}
其中code=1表示成功code=-1表示失败
data是用户登录成功后返回的token
通过密码登录的接口与验证码登录的接口类似，只是请求体不一样。
{
    "email":"",
    "phoneNumber":"18070403876",
    "password":"123456"
}

接下来完善一下个人主页，个人主页需要展示用户的基本信息
调用/user/me接口并且在请求头携带Token
{
    "Token":"35cef2f4469d44b8b7e58f2c2c83a42f"
}
注意大小写敏感
响应后端响应的格式为：
{
	"code": "1",
	"msg": "ok",
	"data": {
		"id": 1006,
		"nickName": "HIabqK7MGG",
		"phoneNumber": "18070403876",
		"password": "123456",
		"email": ""
	}
}
展示id、nickName、phoneNumber、email

添加一个登出按钮，调用接口/user/loginOut请求方式为get,后端无返回，只需要调用
然后清除本地存储的token信息，并且跳转回登录界面

现在需要你设计一个评分的组件，这是评分组件后端返回的示例数据：
{
	"code": "1",
	"msg": "ok",
	"data": {
		"id": 13,
		"imageUrl": "https://image123",
		"score": 2,
		"title": "Java",
		"text": "Java语言",
		"count": 1,
		"myScore": null,
		"createBy": null
	},
	"pageInfo": null
}
这个组件类似于一个小卡片，后续可能需要在很多地方用到。
小卡片上只展示图片、分数、标题,要求样式美观
获取每个小卡片的数据是根据id获取，请求接口为/rating/show/id
比如/rating/show/13
同时每个小卡片可以被点击，点击后就会跳转小卡片的详细信息页面，显示小卡片的全部信息。
所以你需要创建2个vue组件，一个是用于展示评分的卡片组件，而另一个是一个页面，
需要展示评分的详细信息。

现在需要你设计一个主页面，需要分页展示所有的评分。
页面的布局大致为如下
首先是页面有一个艺术标题"QuPing"
接着下面有一个搜索框，用户可以搜索对应的评分，暂时不用实现功能，只需要设计样式
然后下面就是展示搜索出来的评分卡片列表，卡片的展示利用的是之前生成的评分卡片组件
下面是翻页的按钮。
分页查询的接口为/rating/page 方式为post
请求体为：
{
    "pageNumber": 1,
    "pageSize": 1
}
后端返回的示例为：
{
	"code": "1",
	"msg": "ok",
	"data": [
		{
			"id": 13,
			"imageUrl": "https://image123",
			"score": 3,
			"title": "Java",
			"text": "Java语言",
			"count": 1,
			"myScore": null,
			"createBy": null
		}
	],
	"pageInfo": {
		"pageNumber": 1,
		"pageSize": 1,
		"offset": 0
	}
}
默认是展示第一页，每页10条数据。
用户登入成功后需要跳转到该主页面

现在新创建一个页面，用于让用户上传评分
这个页面整体是一个表单包括评分的标题，评分的描述，评分的图片
对应字段为title、text、image,其中image是需要用户上传图片文件
请求的接口为rating/create，请求方式为post，请求头内需要带上Token
并且页面样式符合整体风格

现在需要你修改个人主页界面，要求样式美观符合整体风格，并且添加一个入口按钮
用于用户前往添加评分界面。

Home.vue下面分页页数显示有问题，现在我给你提供一个接口/rating/total
会返回一个整数，表示当前所有的记录条数，你需要根据这个total、pageSize计算出
有多少页，并且显示出来

现在需要你在RatingDetail.vue下面新增一个评论模块，主要用于展示用户对评分的评论。
需要有输入框、发送评论按钮，以及一个评论的列表。
发送评论的接口为/comment/post 请求方式为post，请求头需要带上Token
请求体为：
{
    "ratingId": 13,
    "content": "评论内容"
}
列出当前评分下的所有评论的接口为/comment/list/{ratingId}请求方式为get也要带上Token
{
	"code": "1",
	"msg": "ok",
	"data": [
		{
			"id": 110,
			"content": "这是一个评论",
			"likeCount": 0,
			"userId": 1008,
			"ratingId": 114,
			"createTime": "2024-12-06T11:06:08",
			"updateTime": "2024-12-06T11:06:08",
			"deleted": false
		},
		{
			"id": 111,
			"content": "这是一个评论2",
			"likeCount": 0,
			"userId": 1008,
			"ratingId": 114,
			"createTime": "2024-12-06T11:07:17",
			"updateTime": "2024-12-06T11:07:17",
			"deleted": false
		}
	],
	"pageInfo": null
}
暂时不需要分页，只需要展示用户评论内容、评论点赞数量、评论时间即可
要求样式紧凑简洁符合整体风格

现在评论列表新增了一些功能，首先增加一个点赞按钮
点击后会调用接口/comment/like/{commentId}请求方式为get，请求头需要带上Token
表示用户点赞或者取消点赞该评论。
当用户点击点赞按钮后需要在页面上展示对应状态，具体形式为点赞按钮的亮和灭，
还有点赞评论点赞数的加一或者减一，同时响应，是否点赞成功，code===1
页面第一次加载评论的时候，评论点赞的亮灭和点赞数可以通过之前的接口获得
并且/comment/list/{ratingId}新增了一个字段liked
{
	"id": 111,
	"content": "这是一个评论2",
	"likeCount": 0,
	"userId": 1008,
	"ratingId": 114,
	"liked": true,
	"createTime": "2024-12-06T11:07:17",
	"updateTime": "2024-12-06T11:07:17",
	"deleted": false
}
liked表示用户是否点赞。
为了让你理解清楚，我再解释一下，首先当用户进入对应评分界面后。
需要调用/comment/list/{ratingId}接口获取评论的信息
根据后端返回的信息展示评论，包括点赞状态和点赞数。
接着如果用户点击了点赞按钮，根据当前的状态，修改点赞数和点赞状态
只需要在前端修改即可，并且同时请求接口/comment/like/{commentId}
如果后端响应code===1表示点赞成功，你才可以在前端修改他的状态。

现在要求主界面在加载数据前，调用一个/user/check接口,需要带上Token，方式为get
用来判断用户是否是第一次登录
{
	"code": "1",
	"msg": "ok",
	"data": true,
	"pageInfo": null
}
true就表示用户是第一次登录，false或者null就表示不是第一次登录或者其他情况
如果用户是第一次登录，强制弹出一个窗口，提示用户进行第一次登录的设置
需要设置昵称和密码，点击确定后调用接口/user/firstSetting请求方式为post
{
	"nickName":"",
	"password":""
}

现在需要你修改home.vue主界面的逻辑，抛弃原本的/rating/page接口和/rating/total接口
加载数据统一使用/rating/search接口,请求方式为post
请求体示例为
{
    "pageNumber": 1,
    "pageSiez": 20,
    "condition": "食品"
}
其中condition是条件查询，条件需要用户在搜索框输入，然后点击搜索按钮
后端返回的格式为：
{
	"code": "1",
	"msg": "ok",
	"data": {
		"total": 1,
		"dataList": [
			{
				"id": 1116,
				"imageUrl": "http://video.thma67.biz/ClothingShoesandJewelry",
				"score": 4,
				"title": "傅記食品有限责任公司",
				"text": "饮食业",
				"count": 2,
				"myScore": null,
				"createBy": null,
				"image": null
			}
		]
	}
}
一开始加载数据也是调用/rating/search接口，只是condition为空,就会列出所有数据

能否给上传图片添加一个裁剪功能，用来规范上传图片的规格
需要上传的图片为正方形，且大小就是适应ratingDetail.vue中展示的那么大
并且需要检查图片的大小，裁剪过后最大不能超过2MB
